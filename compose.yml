services:
  bot:
    depends_on:
      - scrapper
    build: ./bot/.
    ports:
      - 8090:8090
      - 5005:5005
    env_file:
      - ./.env
    networks:
      - backend

  scrapper:
    depends_on:
      - liquibase-migrations
    build: ./scrapper/.
    ports:
      - 8080:8080
    env_file:
      - ./.env
    networks:
      - backend
  postgresql:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - backend
  liquibase-migrations:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgresql
    command:
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=postgres
      - --password=postgres
      #      - --log-level=debug
      #      - clearCheckSums
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - backend
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend
  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "29091:29091"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9091,PLAINTEXT_HOST://localhost:29091
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9091,PLAINTEXT_HOST://0.0.0.0:29091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      BOOTSTRAP_SERVERS: kafka1:9091,kafka2:9092,kafka3:9093
      ZOOKEEPER: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - backend
    volumes:
      - kafka_data_1:/var/lib/kafka/data

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - "29092:29092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      BOOTSTRAP_SERVERS: kafka1:9091,kafka2:9092,kafka3:9093
      ZOOKEEPER: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - backend
    volumes:
      - kafka_data_2:/var/lib/kafka/data

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka3
    container_name: kafka3
    ports:
      - "29093:29093"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:29093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 3
      BOOTSTRAP_SERVERS: kafka1:9091,kafka2:9092,kafka3:9093
      ZOOKEEPER: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - backend
    volumes:
      - kafka_data_3:/var/lib/kafka/data

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    networks:
      - backend
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana-oss
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - backend

volumes:
  postgresql: {}
  kafka_data_1: {}
  kafka_data_2: {}
  kafka_data_3: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  backend: {}
