/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq;


import edu.java.domain.jooq.tables.Chat;
import edu.java.domain.jooq.tables.GithubCommit;
import edu.java.domain.jooq.tables.Link;
import edu.java.domain.jooq.tables.LinkChat;
import edu.java.domain.jooq.tables.StackoverflowAnswer;
import edu.java.domain.jooq.tables.records.ChatRecord;
import edu.java.domain.jooq.tables.records.GithubCommitRecord;
import edu.java.domain.jooq.tables.records.LinkChatRecord;
import edu.java.domain.jooq.tables.records.LinkRecord;
import edu.java.domain.jooq.tables.records.StackoverflowAnswerRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CHAT_PK = Internal.createUniqueKey(Chat.CHAT, DSL.name("CHAT_PK"), new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final UniqueKey<GithubCommitRecord> CONSTRAINT_2 = Internal.createUniqueKey(GithubCommit.GITHUB_COMMIT, DSL.name("CONSTRAINT_2"), new TableField[] { GithubCommit.GITHUB_COMMIT.COMMIT_ID }, true);
    public static final UniqueKey<GithubCommitRecord> GITHUB_COMMIT_PK = Internal.createUniqueKey(GithubCommit.GITHUB_COMMIT, DSL.name("GITHUB_COMMIT_PK"), new TableField[] { GithubCommit.GITHUB_COMMIT.LINK_ID, GithubCommit.GITHUB_COMMIT.SHA }, true);
    public static final UniqueKey<LinkRecord> LINK_PK = Internal.createUniqueKey(Link.LINK, DSL.name("LINK_PK"), new TableField[] { Link.LINK.LINK_ID }, true);
    public static final UniqueKey<LinkRecord> LINK_PK2 = Internal.createUniqueKey(Link.LINK, DSL.name("LINK_PK2"), new TableField[] { Link.LINK.URI }, true);
    public static final UniqueKey<LinkChatRecord> LINK_CHAT_PK = Internal.createUniqueKey(LinkChat.LINK_CHAT, DSL.name("LINK_CHAT_PK"), new TableField[] { LinkChat.LINK_CHAT.LINK_ID, LinkChat.LINK_CHAT.CHAT_ID }, true);
    public static final UniqueKey<StackoverflowAnswerRecord> CONSTRAINT_6B = Internal.createUniqueKey(StackoverflowAnswer.STACKOVERFLOW_ANSWER, DSL.name("CONSTRAINT_6B"), new TableField[] { StackoverflowAnswer.STACKOVERFLOW_ANSWER.ANSWER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GithubCommitRecord, LinkRecord> CONSTRAINT_2B = Internal.createForeignKey(GithubCommit.GITHUB_COMMIT, DSL.name("CONSTRAINT_2B"), new TableField[] { GithubCommit.GITHUB_COMMIT.LINK_ID }, Keys.LINK_PK, new TableField[] { Link.LINK.LINK_ID }, true);
    public static final ForeignKey<LinkChatRecord, LinkRecord> LINK_TO_USER_LINK_LINK_ID_FK = Internal.createForeignKey(LinkChat.LINK_CHAT, DSL.name("LINK_TO_USER_LINK_LINK_ID_FK"), new TableField[] { LinkChat.LINK_CHAT.LINK_ID }, Keys.LINK_PK, new TableField[] { Link.LINK.LINK_ID }, true);
    public static final ForeignKey<LinkChatRecord, ChatRecord> LINK_TO_USER_USER_USER_ID_FK = Internal.createForeignKey(LinkChat.LINK_CHAT, DSL.name("LINK_TO_USER_USER_USER_ID_FK"), new TableField[] { LinkChat.LINK_CHAT.CHAT_ID }, Keys.CHAT_PK, new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final ForeignKey<StackoverflowAnswerRecord, LinkRecord> CONSTRAINT_6 = Internal.createForeignKey(StackoverflowAnswer.STACKOVERFLOW_ANSWER, DSL.name("CONSTRAINT_6"), new TableField[] { StackoverflowAnswer.STACKOVERFLOW_ANSWER.LINK_ID }, Keys.LINK_PK, new TableField[] { Link.LINK.LINK_ID }, true);
}
