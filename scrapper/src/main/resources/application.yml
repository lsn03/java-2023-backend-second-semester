app:
  database-access-type: jooq # jpa, jdbc
  scheduler:
    enable: true
    interval: 20s
    force-check-delay: 10s
  git-hub-api-properties:
    token: ${APP_GITHUB_TOKEN:token}
  stack-over-flow-api-properties:
    key: ${SOF_KEY:key}
    token: ${APP_SOF_ACCESS_TOKEN:token}
  kafka:
    using-queue: ${USING_QUEUE:true}
    partitions: 10
    replicas: 1
    topic: topic1
    servers: ${BOOTSTRAP_SERVERS:localhost:29091,localhost:29092,localhost:29093 }
    client-id: my-client-id
#  retry:
#    strategy: constant
#    max-attempts: 3
#    max-delay: 3
#    base-delay: 3
#    multi: 3
#    status-codes: [429, 500,501, 502,503]
  rate:
    count: 20
    seconds: 60


spring:
  liquibase:
    enabled: false
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://${DATASOURCE_DATABASE_HOSTNAME:localhost}:${DATASOURCE_DATABASE_PORT:5432}/scrapper
    username: ${DATASOURCE_DATABASE_USERNAME:postgres}
    password: ${DATASOURCE_DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  devtools:
    restart:
      enabled: false
  kafka:
    producer:
      client-id: my-client-id
    bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:29091,localhost:29092,localhost:29093 }

springdoc:
  swagger-ui:
    path: /swagger-ui

server:
  port: ${SCRAPPER_PORT:8080}
logging:
  config: classpath:log4j2-plain.xml
client:
  properties:
    github-base-url: ${GITHUB_BASE_URL:https://api.github.com}
    sof-base-url: ${SOF_BASE_URL:https://api.stackexchange.com/2.3}
    bot-base-url: ${BOT_BASE_URL:http://localhost:8090}

# Metrics
management:
  server:
    port: 8081
  endpoints:
    enabled-by-default: false
    web:
      base-path: /
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
  tags:
    application: ${spring.application.name}

